/*
* Distributed Algebraic Computations
* Copyright (C) 2019  Patrik Omland
* This program is free software: you can redistribute it and/or modify
* it under the terms of the GNU General Public License as published by
* the Free Software Foundation, either version 3 of the License, or
* (at your option) any later version.
*
* This program is distributed in the hope that it will be useful,
* but WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
* GNU General Public License for more details.
*
* You should have received a copy of the GNU General Public License
* along with this program. If not, see <http://www.gnu.org/licenses/>.
*
* This program was generated by DAC "Distributed Algebraic Computations"
* The source code for the generator is available on GitHub
* https://github.com/siquus/dac
*/


#include <stddef.h>

typedef void (*DacOutputCallbackmatrixProd_t)(const float* pt, size_t size);
extern void DacOutputCallbackmatrixProd_Register(DacOutputCallbackmatrixProd_t callback);
typedef void (*DacOutputCallbackmatrixKronProd_t)(const float* pt, size_t size);
extern void DacOutputCallbackmatrixKronProd_Register(DacOutputCallbackmatrixKronProd_t callback);
typedef void (*DacOutputCallbackProduct_t)(const float* pt, size_t size);
extern void DacOutputCallbackProduct_Register(DacOutputCallbackProduct_t callback);
typedef void (*DacOutputCallbackSum_t)(const float* pt, size_t size);
extern void DacOutputCallbackSum_Register(DacOutputCallbackSum_t callback);
typedef void (*DacOutputCallbackSmallerThan_t)(const int32_t* pt, size_t size);
extern void DacOutputCallbackSmallerThan_Register(DacOutputCallbackSmallerThan_t callback);
typedef void (*DacOutputCallbackWhile_t)(const float* pt, size_t size);
extern void DacOutputCallbackWhile_Register(DacOutputCallbackWhile_t callback);
extern int DacRun(size_t threadsNrOf);
